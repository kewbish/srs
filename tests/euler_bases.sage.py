

# This file was *autogenerated* from the file euler_bases.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_4 = Integer(4); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_10 = Integer(10); _sage_const_1000000 = Integer(1000000); _sage_const_2000000 = Integer(2000000); _sage_const_5 = Integer(5); _sage_const_3p = RealNumber('3.'); _sage_const_50 = Integer(50); _sage_const_100 = Integer(100)
from collections import defaultdict
from multiprocessing import Pool
from sage.misc.prandom import randint

def euler_primality(n: int, k: int, a: int = _sage_const_0 ) -> bool:
    """
    Returns True if number is probably prime.
    Returns False if number is composite.
    """
    if n == _sage_const_1  or n == _sage_const_4 :
        return False
    elif n == _sage_const_2  or n == _sage_const_3 :
        return True
    elif n % _sage_const_2  == _sage_const_0 :
        return False
    for _ in range(k):
        if a == _sage_const_0 :
            a = randint(_sage_const_2 , n - _sage_const_2 )
        expted = power_mod(a, (n - _sage_const_1 ) // _sage_const_2 , n)
        if expted != jacobi_symbol(a, n):
            return False
    return True

def gen_randints() -> list[tuple[int, bool]]:
    randints = []
    for _ in range(_sage_const_10 **_sage_const_3 ):
        rand = randint(_sage_const_1000000 , _sage_const_2000000 )
        sage_rand = is_prime(rand)
        randints.append((rand, sage_rand))
    return randints

def average_pprimes(k) -> float:
    result = _sage_const_0 
    for _ in range(_sage_const_3 ):
        pprimes = _sage_const_0 
        for n, is_prime in gen_randints():
            # euler_res = euler_primality(n, k) # passing all random bases
            # euler_res = euler_primality(n, k, 5) # passing a specific base
            euler_res_1 = euler_primality(n, k, _sage_const_2 )
            euler_res_2 = euler_primality(n, k, _sage_const_5 )
            # if euler_res and not is_prime: # for passing 1 base
            if euler_res_1 and euler_res_2 and not is_prime: # for passing 2 bases together
                # Euler primality returns True, Sage returns False => pseudoprime
                print(f"Euler pseudoprime: {n}, tries: {k}")
                pprimes += _sage_const_1 
        result += pprimes
    return numerical_approx(result / _sage_const_3p , digits=_sage_const_2 )

if __name__ == "__main__":
    with Pool(_sage_const_50 ) as p:
        results = {k: average_pprimes(k) for k in range(_sage_const_1 , _sage_const_100 )}
    print(results)
    # lowest number of tries for lowest number of pseudoprimes
    print(sorted(results.items(), key=lambda x: x[_sage_const_1 ])[_sage_const_0 ])


# === RESULTS ===

# WITH BASE 2
# first trial: only needed 1 base test to pass
# second trial: only needed 1 base test to pass
# third trial: only needed 1 base test to pass

# WITH BASE 3
# first trial: 
# {1: 36., 2: 36., 3: 36., 4: 36., 5: 36., 6: 36., 7: 36., 8: 36., 9: 36., 10: 36., 11: 36., 12: 36., 13: 36., 14: 36., 15: 36., 16: 36., 17: 36., 18: 36., 19: 36., 20: 36., 21: 36., 22: 36., 23: 36., 24: 36., 25: 36., 26: 36., 27: 36., 28: 36., 29: 36., 30: 36., 31: 36., 32: 36., 33: 36., 34: 36., 35: 36., 36: 36., 37: 36., 38: 36., 39: 36., 40: 36., 41: 36., 42: 36., 43: 36., 44: 36., 45: 36., 46: 36., 47: 36., 48: 36. , 49: 36., 50: 36., 51: 36., 52: 36., 53: 36., 54: 36., 55: 36., 56: 36., 57: 36., 58: 36., 59: 36., 60: 36., 61: 36., 62: 36., 63: 36., 64: 36., 65: 36., 66: 36., 67: 36., 68: 36., 69: 36., 70: 36., 71: 36., 72 : 36., 73: 36., 74: 36., 75: 36., 76: 36., 77: 36., 78: 36., 79: 36., 80: 36., 81: 36., 82: 36., 83: 36., 84: 36., 85: 36., 86: 36., 87: 36., 88: 36., 89: 36., 90: 36., 91: 36., 92: 36., 93: 36., 94: 36., 95: 36 ., 96: 36., 97: 36., 98: 36., 99: 36.} and (1, 36.)
# second trial:
# {1: 28., 2: 28., 3: 28., 4: 28., 5: 28., 6: 28., 7: 28., 8: 28., 9: 28., 10: 28., 11: 28., 12: 28., 13: 28., 14: 28., 15: 28., 16: 28., 17: 28., 18: 28., 19: 28., 20: 28., 21: 28., 22: 28., 23: 28., 24: 28., 25: 28., 26: 28., 27: 28., 28: 28., 29: 28., 30: 28., 31: 28., 32: 28., 33: 28., 34: 28., 35: 28., 36: 28., 37: 28., 38: 28., 39: 28., 40: 28., 41: 28., 42: 28., 43: 28., 44: 28., 45: 28., 46: 28., 47: 28., 48: 28., 49: 28., 50: 28., 51: 28., 52: 28., 53: 28., 54: 28., 55: 28., 56: 28., 57: 28., 58: 28., 59: 28., 60: 28., 61: 28., 62: 28., 63: 28., 64: 28., 65: 28., 66: 28., 67: 28., 68: 28., 69: 28., 70: 28., 71: 28., 72: 28., 73: 28., 74: 28., 75: 28., 76: 28., 77: 28., 78: 28., 79: 28., 80: 28., 81: 28., 82: 28., 83: 28., 84: 28., 85: 28., 86: 28., 87: 28., 88: 28., 89: 28., 90: 28., 91: 28., 92: 28., 93: 28., 94: 28., 95: 28., 96: 28., 97: 28., 98: 28., 99: 28.} and (1, 28.)
# third trial:
# {1: 34., 2: 34., 3: 34., 4: 34., 5: 34., 6: 34., 7: 34., 8: 34., 9: 34., 10: 34., 11: 34., 12: 34., 13: 34., 14: 34., 15: 34., 16: 34., 17: 34., 18: 34., 19: 34., 20: 34., 21: 34., 22: 34., 23: 34., 24: 34., 25: 34., 26: 34., 27: 34., 28: 34., 29: 34., 30: 34., 31: 34., 32: 34., 33: 34., 34: 34., 35: 34., 36: 34., 37: 34., 38: 34., 39: 34., 40: 34., 41: 34., 42: 34., 43: 34., 44: 34., 45: 34., 46: 34., 47: 34., 48: 34. , 49: 34., 50: 34., 51: 34., 52: 34., 53: 34., 54: 34., 55: 34., 56: 34., 57: 34., 58: 34., 59: 34., 60: 34., 61: 34., 62: 34., 63: 34., 64: 34., 65: 34., 66: 34., 67: 34., 68: 34., 69: 34., 70: 34., 71: 34., 72 : 34., 73: 34., 74: 34., 75: 34., 76: 34., 77: 34., 78: 34., 79: 34., 80: 34., 81: 34., 82: 34., 83: 34., 84: 34., 85: 34., 86: 34., 87: 34., 88: 34., 89: 34., 90: 34., 91: 34., 92: 34., 93: 34., 94: 34., 95: 34 ., 96: 34., 97: 34., 98: 34., 99: 34.} and (1, 34.)

# WITH BASE 5
# first trial:
# {1: 33., 2: 33., 3: 33., 4: 33., 5: 33., 6: 33., 7: 33., 8: 33., 9: 33., 10: 33., 11: 33., 12: 33., 13: 33., 14: 33., 15: 33., 16: 33., 17: 33., 18: 33., 19: 33., 20: 33., 21: 33., 22: 33., 23: 33., 24: 33., 25: 33., 26: 33., 27: 33., 28: 33., 29: 33., 30: 33., 31: 33., 32: 33., 33: 33., 34: 33., 35: 33., 36: 33., 37: 33., 38: 33., 39: 33., 40: 33., 41: 33., 42: 33., 43: 33., 44: 33., 45: 33., 46: 33., 47: 33., 48: 33. , 49: 33., 50: 33., 51: 33., 52: 33., 53: 33., 54: 33., 55: 33., 56: 33., 57: 33., 58: 33., 59: 33., 60: 33., 61: 33., 62: 33., 63: 33., 64: 33., 65: 33., 66: 33., 67: 33., 68: 33., 69: 33., 70: 33., 71: 33., 72 : 33., 73: 33., 74: 33., 75: 33., 76: 33., 77: 33., 78: 33., 79: 33., 80: 33., 81: 33., 82: 33., 83: 33., 84: 33., 85: 33., 86: 33., 87: 33., 88: 33., 89: 33., 90: 33., 91: 33., 92: 33., 93: 33., 94: 33., 95: 33 ., 96: 33., 97: 33., 98: 33., 99: 33.} and (1, 33.)
# second trial: 
# {1: 34., 2: 34., 3: 34., 4: 34., 5: 34., 6: 34., 7: 34., 8: 34., 9: 34., 10: 34., 11: 34., 12: 34., 13: 34., 14: 34., 15: 34., 16: 34., 17: 34., 18: 34., 19: 34., 20: 34., 21: 34., 22: 34., 23: 34., 24: 34., 25: 34., 26: 34., 27: 34., 28: 34., 29: 34., 30: 34., 31: 34., 32: 34., 33: 34., 34: 34., 35: 34., 36: 34., 37: 34., 38: 34., 39: 34., 40: 34., 41: 34., 42: 34., 43: 34., 44: 34., 45: 34., 46: 34., 47: 34., 48: 34. , 49: 34., 50: 34., 51: 34., 52: 34., 53: 34., 54: 34., 55: 34., 56: 34., 57: 34., 58: 34., 59: 34., 60: 34., 61: 34., 62: 34., 63: 34., 64: 34., 65: 34., 66: 34., 67: 34., 68: 34., 69: 34., 70: 34., 71: 34., 72 : 34., 73: 34., 74: 34., 75: 34., 76: 34., 77: 34., 78: 34., 79: 34., 80: 34., 81: 34., 82: 34., 83: 34., 84: 34., 85: 34., 86: 34., 87: 34., 88: 34., 89: 34., 90: 34., 91: 34., 92: 34., 93: 34., 94: 34., 95: 34 ., 96: 34., 97: 34., 98: 34., 99: 34.} and (1, 34.)
# third trial:
# {1: 42., 2: 42., 3: 42., 4: 42., 5: 42., 6: 42., 7: 42., 8: 42., 9: 42., 10: 42., 11: 42., 12: 42., 13: 42., 14: 42., 15: 42., 16: 42., 17: 42., 18: 42., 19: 42., 20: 42., 21: 42., 22: 42., 23: 42., 24: 42., 25: 42., 26: 42., 27: 42., 28: 42., 29: 42., 30: 42., 31: 42., 32: 42., 33: 42., 34: 42., 35: 42., 36: 42., 37: 42., 38: 42., 39: 42., 40: 42., 41: 42., 42: 42., 43: 42., 44: 42., 45: 42., 46: 42., 47: 42., 48: 42., 49: 42., 50: 42., 51: 42., 52: 42., 53: 42., 54: 42., 55: 42., 56: 42., 57: 42., 58: 42., 59: 42., 60: 42., 61: 42., 62: 42., 63: 42., 64: 42., 65: 42., 66: 42., 67: 42., 68: 42., 69: 42., 70: 42., 71: 42., 72: 42., 73: 42., 74: 42., 75: 42., 76: 42., 77: 42., 78: 42., 79: 42., 80: 42., 81: 42., 82: 42., 83: 42., 84: 42., 85: 42., 86: 42., 87: 42., 88: 42., 89: 42., 90: 42., 91: 42., 92: 42., 93: 42., 94: 42., 95: 42., 96: 42., 97: 42., 98: 42., 99: 42.} and (1, 42.) 

# WITH BOTH BASE 2 and 3
# first trial: only needed 1 base test to pass
# second trial: only needed 1 base test to pass
# third trial: only needed 1 base test to pass

# WITH BOTH BASE 3 and 5
# first trial:
# {1: 30., 2: 30., 3: 30., 4: 30., 5: 30., 6: 30., 7: 30., 8: 30., 9: 30., 10: 30., 11: 30., 12: 30., 13: 30., 14: 30., 15: 30., 16: 30., 17: 30., 18: 30., 19: 30., 20: 30., 21: 30., 22: 30., 23: 30., 24: 30., 25: 30., 26: 30., 27: 30., 28: 30., 29: 30., 30: 30., 31: 30., 32: 30., 33: 30., 34: 30., 35: 30., 36: 30., 37: 30., 38: 30., 39: 30., 40: 30., 41: 30., 42: 30., 43: 30., 44: 30., 45: 30., 46: 30., 47: 30., 48: 30. , 49: 30., 50: 30., 51: 30., 52: 30., 53: 30., 54: 30., 55: 30., 56: 30., 57: 30., 58: 30., 59: 30., 60: 30., 61: 30., 62: 30., 63: 30., 64: 30., 65: 30., 66: 30., 67: 30., 68: 30., 69: 30., 70: 30., 71: 30., 72 : 30., 73: 30., 74: 30., 75: 30., 76: 30., 77: 30., 78: 30., 79: 30., 80: 30., 81: 30., 82: 30., 83: 30., 84: 30., 85: 30., 86: 30., 87: 30., 88: 30., 89: 30., 90: 30., 91: 30., 92: 30., 93: 30., 94: 30., 95: 30 ., 96: 30., 97: 30., 98: 30., 99: 30.} and (1, 30.) 
# second trial:
# {1: 32., 2: 32., 3: 32., 4: 32., 5: 32., 6: 32., 7: 32., 8: 32., 9: 32., 10: 32., 11: 32., 12: 32., 13: 32., 14: 32., 15: 32., 16: 32., 17: 32., 18: 32., 19: 32., 20: 32., 21: 32., 22: 32., 23: 32., 24: 32., 25: 32., 26: 32., 27: 32., 28: 32., 29: 32., 30: 32., 31: 32., 32: 32., 33: 32., 34: 32., 35: 32., 36: 32., 37: 32., 38: 32., 39: 32., 40: 32., 41: 32., 42: 32., 43: 32., 44: 32., 45: 32., 46: 32., 47: 32., 48: 32., 49: 32., 50: 32., 51: 32., 52: 32., 53: 32., 54: 32., 55: 32., 56: 32., 57: 32., 58: 32., 59: 32., 60: 32., 61: 32., 62: 32., 63: 32., 64: 32., 65: 32., 66: 32., 67: 32., 68: 32., 69: 32., 70: 32., 71: 32., 72: 32., 73: 32., 74: 32., 75: 32., 76: 32., 77: 32., 78: 32., 79: 32., 80: 32., 81: 32., 82: 32., 83: 32., 84: 32., 85: 32., 86: 32., 87: 32., 88: 32., 89: 32., 90: 32., 91: 32., 92: 32., 93: 32., 94: 32., 95: 32., 96: 32., 97: 32., 98: 32., 99: 32.} and (1, 32.)
# third trial:
# {1: 40., 2: 40., 3: 40., 4: 40., 5: 40., 6: 40., 7: 40., 8: 40., 9: 40., 10: 40., 11: 40., 12: 40., 13: 40., 14: 40., 15: 40., 16: 40., 17: 40., 18: 40., 19: 40., 20: 40., 21: 40., 22: 40., 23: 40., 24: 40., 25: 40., 26: 40., 27: 40., 28: 40., 29: 40., 30: 40., 31: 40., 32: 40., 33: 40., 34: 40., 35: 40., 36: 40., 37: 40., 38: 40., 39: 40., 40: 40., 41: 40., 42: 40., 43: 40., 44: 40., 45: 40., 46: 40., 47: 40., 48: 40., 49: 40., 50: 40., 51: 40., 52: 40., 53: 40., 54: 40., 55: 40., 56: 40., 57: 40., 58: 40., 59: 40., 60: 40., 61: 40., 62: 40., 63: 40., 64: 40., 65: 40., 66: 40., 67: 40., 68: 40., 69: 40., 70: 40., 71: 40., 72: 40., 73: 40., 74: 40., 75: 40., 76: 40., 77: 40., 78: 40., 79: 40., 80: 40., 81: 40., 82: 40., 83: 40., 84: 40., 85: 40., 86: 40., 87: 40., 88: 40., 89: 40., 90: 40., 91: 40., 92: 40., 93: 40., 94: 40., 95: 40., 96: 40., 97: 40., 98: 40., 99: 40.} and (1, 40.)

# WITH BOTH BASE 2 AND 5
# first trial: only needed 1 base test to pass
# second trial: only needed 1 base test to pass
# third trial: only needed 1 base test to pass

# WITH ALL RANDOM BASES IN RANGE(2, N - 2)
# first trial:
# {5: 20., 6: 16., 7: 21., 8: 16., 9: 19., 10: 17., 11: 19., 12: 19., 13: 17., 14: 19., 15: 17., 16: 18., 17: 16., 18: 17., 19: 18., 20: 20., 21: 19., 22: 20., 23: 18., 24: 17., 25: 21., 26: 16., 27: 15., 28: 22., 29: 17., 30: 17., 31: 17., 32: 23., 33: 21., 34: 21., 35: 21., 36: 21., 37: 16., 38: 20., 39: 19., 40: 21., 41: 17., 42: 18., 43: 18., 44: 16., 45: 19., 46: 16., 47: 20., 48: 20., 49: 18., 50: 20., 51: 18., 52: 18., 53: 18., 54: 19., 55: 19., 56: 16., 57: 20., 58: 15., 59: 18., 60: 21., 61: 18., 62: 17., 63: 21., 64: 18., 65: 16., 66: 19., 67: 19., 68: 20., 69: 20., 70: 18., 71: 19., 72: 17., 73: 18., 74: 23., 75: 17. , 76: 19., 77: 20., 78: 20., 79: 20., 80: 18., 81: 20., 82: 21., 83: 20., 84: 22., 85: 20., 86: 20., 87: 19., 88: 18., 89: 17., 90: 17., 91: 20., 92: 15., 93: 18., 94: 19., 95: 19., 96: 19., 97: 16., 98: 19., 99 : 17.} and (27, 15.) 
# second trial: 
# {5: 16., 6: 18., 7: 18., 8: 16., 9: 17., 10: 17., 11: 17., 12: 16., 13: 15., 14: 20., 15: 18., 16: 17., 17: 16., 18: 17., 19: 18., 20: 19., 21: 16., 22: 15., 23: 18., 24: 15., 25: 15., 26: 15., 27: 15., 28: 16., 29: 18., 30: 15., 31: 17., 32: 16., 33: 19., 34: 16., 35: 19., 36: 15., 37: 15., 38: 15., 39: 16., 40: 18., 41: 16., 42: 17., 43: 17., 44: 15., 45: 18., 46: 16., 47: 17., 48: 16., 49: 16., 50: 18., 51: 13., 52: 15., 53: 16., 54: 18., 55: 14., 56: 16., 57: 16., 58: 15., 59: 18., 60: 17., 61: 15., 62: 20., 63: 18., 64: 17., 65: 17., 66: 14., 67: 16., 68: 15., 69: 17., 70: 17., 71: 14., 72: 18., 73: 15., 74: 19., 75: 18. , 76: 18., 77: 18., 78: 16., 79: 20., 80: 17., 81: 15., 82: 19., 83: 15., 84: 14., 85: 14., 86: 18., 87: 15., 88: 18., 89: 17., 90: 14., 91: 17., 92: 18., 93: 18., 94: 14., 95: 18., 96: 15., 97: 18., 98: 17., 99 : 20.} and (51, 13.)
# third trial:
# {5: 20., 6: 22., 7: 16., 8: 20., 9: 20., 10: 19., 11: 22., 12: 15., 13: 19., 14: 21., 15: 20., 16: 21., 17: 17., 18: 20., 19: 21., 20: 17., 21: 20., 22: 18., 23: 20., 24: 18., 25: 22., 26: 17., 27: 18., 28: 20., 29: 16., 30: 18., 31: 15., 32: 18., 33: 20., 34: 13., 35: 18., 36: 19., 37: 21., 38: 20., 39: 19., 40: 18., 41: 21., 42: 21., 43: 20., 44: 19., 45: 21., 46: 20., 47: 20., 48: 20., 49: 17., 50: 20., 51: 18., 52: 22., 53: 20., 54: 17., 55: 17., 56: 20., 57: 21., 58: 21., 59: 19., 60: 17., 61: 20., 62: 18., 63: 19., 64: 22., 65: 17., 66: 17., 67: 20., 68: 17., 69: 16., 70: 22., 71: 21., 72: 19., 73: 19., 74: 21., 75: 18. , 76: 18., 77: 20., 78: 17., 79: 18., 80: 18., 81: 21., 82: 20., 83: 20., 84: 20., 85: 20., 86: 22., 87: 20., 88: 16., 89: 19., 90: 19., 91: 22., 92: 21., 93: 16., 94: 22., 95: 20., 96: 18., 97: 19., 98: 19., 99 : 20.} and (34, 13.)


