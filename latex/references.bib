@phdthesis{terzian_aks_2013,
	title = {The {AKS} {Primality} {Test}},
	url = {https://repository.library.csuci.edu/handle/10211.3/57096},
	abstract = {In 2002 Manindra Agrawal, Neeraj Kayal, and Nitin Saxena discovered an algorithm to test a number for primality that is both deterministic and runs in polynomial time. The AKS algorithm hinges on a calculated value they call r, which is defined for a given integer n {\textgreater}1 as the least value for which the order of n modulo r is greater than log 2 over 2 n. This r has a proven upper bound of log 5 over 2 n. In this paper, we prove that 2   log 2 over 2 n is a lower bound of the value r, and if n is a square, there is a lower bound of 1   2 log 2 over 2 n . We also present data suggesting that 3 log 2 over 2 n is a smaller upper bound of r. If this is indeed an upper bound, the AKS Primality Test is shown to have a time complexity of O(log 6   ε over 2 n) in bit operations for any small ε greater than 0. Data also suggests a number n is a square if and only if its corresponding r is greater than 3 log 2 over 2 n.},
	language = {en\_US},
	school = {The California State University},
	author = {Terzian, Tammy},
	month = oct,
	year = {2013},
    type = {Thesis},
	keywords = {Number theory, Prime numbers, Polynomials, AKS primality test, Mathematics thesis, Algorithms},
}

@article{monier_evaluation_1980,
	title = {Evaluation and comparison of two efficient probabilistic primality testing algorithms},
	volume = {12},
	issn = {03043975},
	url = {https://linkinghub.elsevier.com/retrieve/pii/0304397580900079},
	doi = {10.1016/0304-3975(80)90007-9},
	language = {en},
	number = {1},
	urldate = {2021-08-11},
	journal = {Theoretical Computer Science},
	author = {Monier, Louis},
	month = sep,
	year = {1980},
	pages = {97--108},
}

@phdthesis{rotella_efficient_2005,
	title = {An {Efficient} {Implementation} of the {AKS} {Polynomial}-{Time} {Primality} {Proving} {Algorithm}},
	url = {http://www.cs.cmu.edu/afs/cs/user/mjs/ftp/thesis-program/2005/rotella.pdf},
	school = {Carnegie Mellon University},
	author = {Rotella, Chris},
	month = may,
	year = {2005},
    type = {Thesis},
}

@techreport{nemana_empirical_2016,
	title = {An empirical study towards refining the aks primality testing algorithm},
	url = {https://eprint.iacr.org/2016/362},
	abstract = {The AKS (Agrawal-Kayal-Saxena) algorithm is the first ever deterministic polynomial-time primality-proving algorithm whose asymptotic run time complexity is \$O({\textbackslash}log{\textasciicircum}\{12+{\textbackslash}epsilon\} n)\$, where \${\textbackslash}epsilon {\textgreater} 0\$. Despite this theoretical breakthrough, the algorithm serves no practical use in conventional cryptologic applications, as the existing probabilistic primality tests like ECPP in conjunction with conditional usage of sub-exponential time deterministic tests are found to have better practical running time. Later, the authors of AKS test improved the algorithm so that it runs in \$O({\textbackslash}log{\textasciicircum}\{10.5+{\textbackslash}epsilon\} n)\$ time. A variant of AKS test was demonstrated by Carl Pomerance and H. W. Lenstra, which runs in almost half the number of operations required in AKS. This algorithm also suffers impracticality. Attempts were made to efficiently implement AKS algorithm, but in contrast with the slightest improvements in performance which target specific machine architectures, the limitations of the algorithm are found highlighted. In this paper we present our analysis and observations on AKS algorithm based on the empirical results and statistics of certain parameters which control the asymptotic running time of the algorithm. From this analysis we refine AKS so that it runs in \$O({\textbackslash}log{\textasciicircum}\{4+{\textbackslash}epsilon\} n)\$ time.},
	number = {362},
	urldate = {2021-08-11},
	author = {Nemana, Lalitha Kiran and Venkaiah, V. Ch},
	year = {2016},
	keywords = {implementation, primality testing, AKS algorithm},
}

@article{pomerance_pseudoprimes_1980,
	title = {The {Pseudoprimes} to 25 • 10{\textasciicircum}9},
	volume = {35},
	abstract = {The odd composite \$n {\textbackslash}leqslant 25 {\textbackslash}cdot 10{\textasciicircum}9\$ such that \$2{\textasciicircum}\{n-1\} {\textbackslash}equiv 1 ({\textbackslash}operatorname\{mod n\})\$ have been determined and their distribution tabulated. We investigate the properties of three special types of pseudoprimes: Euler pseudoprimes, strong pseudoprimes, and Carmichael numbers. The theoretical upper bound and the heuristic lower bound due to Erdos for the counting function of the Carmichael numbers are both sharpened. Several new quick tests for primality are proposed, including some which combine pseudoprimes with Lucas sequences.},
	number = {151},
	journal = {Mathematics of Computation},
	author = {Pomerance, Carl and Selfridge, J. L. and Wagstaff, Samuel S},
	month = jul,
	year = {1980},
	pages = {1003--1026},
}

@article{agrawal_primes_2004,
	title = {{PRIMES} is in {P}},
	volume = {160},
	issn = {0003-486X},
	url = {http://annals.math.princeton.edu/2004/160-2/p12},
	doi = {10.4007/annals.2004.160.781},
	language = {en},
	number = {2},
	urldate = {2021-08-11},
	journal = {Annals of Mathematics},
	author = {Agrawal, Manindra and Kayal, Neeraj and Saxena, Nitin},
	month = sep,
	year = {2004},
	pages = {781--793},
}

@misc{stephanou_ssophoclis/aks-algorithm:_2020,
	title = {Ssophoclis/{AKS}-algorithm: {Implementation} of the {AKS} primality test algorithm in python.},
	shorttitle = {Github - ssophoclis/aks-algorithm},
	url = {https://github.com/Ssophoclis/AKS-algorithm},
	abstract = {Implementation of the AKS primality test algorithm in python. - GitHub - Ssophoclis/AKS-algorithm: Implementation of the AKS primality test algorithm in python.},
	language = {en},
	urldate = {2021-08-11},
	journal = {GitHub},
	author = {Stephanou, Sophoclis},
	month = jul,
	year = {2020},
}

@article{lenstra_jr._primality_2005,
	title = {Primality testing with {Gaussian} periods},
	url = {https://math.dartmouth.edu/~carlp/PDF/complexity12.pdf},
	doi = {10.4171/JEMS/861},
	language = {en},
	urldate = {2021-08-11},
	author = {Lenstra, Jr., Hendrik and Pomerance, Carl},
	month = jul,
	year = {2005},
}

@misc{sympy_number_2021,
    author = {SymPy Development Team},
	title = {Number {Theory} — {SymPy} 1.8 documentation},
	url = {https://docs.sympy.org/latest/modules/ntheory.html#sympy.ntheory.primetest.isprime},
    month = apr,
    year = {2021},
	urldate = {2021-08-11},
}


@phdthesis{brent_primality_2010,
	address = {Mathematical Sciences Institute and College of Engineering and Computer Science},
	title = {Primality {Testing}},
	url = {https://maths-people.anu.edu.au/~brent/pd/comp4600_primality.pdf},
	school = {Australian National University},
	author = {Brent, Richard P},
	month = aug,
	year = {2010},
    type = {Thesis},
}

@article{solovay_fast_1977,
	title = {A {Fast} {Monte}-{Carlo} {Test} for {Primality}},
	volume = {6},
	issn = {0097-5397, 1095-7111},
	url = {http://epubs.siam.org/doi/10.1137/0206006},
	doi = {10.1137/0206006},
	language = {en},
	number = {1},
	urldate = {2021-08-12},
	journal = {SIAM Journal on Computing},
	author = {Solovay, R. and Strassen, V.},
	month = mar,
	year = {1977},
	pages = {84--85},
}


@article{rabin_probabilistic_1980,
	title = {Probabilistic algorithm for testing primality},
	volume = {12},
	issn = {0022314X},
	url = {https://linkinghub.elsevier.com/retrieve/pii/0022314X80900840},
	doi = {10.1016/0022-314X(80)90084-0},
	language = {en},
	number = {1},
	urldate = {2021-08-12},
	journal = {Journal of Number Theory},
	author = {Rabin, Michael O},
	month = feb,
	year = {1980},
	pages = {128--138},
}

@inproceedings{miller_riemanns_1975,
	address = {Albuquerque, New Mexico, United States},
	title = {Riemann's {Hypothesis} and tests for primality},
	url = {http://portal.acm.org/citation.cfm?doid=800116.803773},
	doi = {10.1145/800116.803773},
	language = {en},
	urldate = {2021-08-12},
	booktitle = {Proceedings of seventh annual {ACM} symposium on {Theory} of computing  - {STOC} '75},
	publisher = {ACM Press},
	author = {Miller, Gary L.},
	year = {1975},
	pages = {234--239},
}

